/* Exported from KeYmaera X v4.9.5 */

Theorem "starlab-stop"

Definitions
  Real maxX;
  Real maxY;

  Real maxVp; /* max poacher velocity */
  Real maxVr; /* max ranger velocity */
  Real maxVt; /* max target velocity */
  
  Real preyr; /* distance prey can react to poacher */
  Real killr; /* how close poacher should be to kill target */
  Real capr; /* how close ranger should be to catch poacher */
  Real T; /* ranger shifts */
  
  /* functions */
  Real distancesq(Real x1, Real x2, Real y1, Real y2) = (x2-x1)^2 + (y2-y1)^2;
  Bool vBound(Real dx, Real dy, Real vbound) <-> dx^2 + dy^2 <= vbound^2;
  Bool atBorder(Real x, Real y) <-> 0=x | x=maxX | 0=y | y=maxY;
  Bool inBorder(Real x, Real y) <-> 0<=x & x<=maxX & 0<=y & y<=maxY;
  Bool inRangerBorder(Real x, Real y) <-> x >= capr/(2^(1/2)) & y >= capr/(2^(1/2)) & x <= maxX-capr/(2^(1/2)) & y <= maxY-capr/(2^(1/2));
  Real spaceDiagonal() = (maxX^2 + maxY^2)^(1/2);
  Real rangerDiagonal() = maxX*2^(1/2) - 2*capr; /* assuming maxX = maxY */
  Bool poacherDistanceBound(Real x1, Real y1, Real x2, Real y2) <-> distancesq(x1, x2, y1, y2) > (2*maxVp*T+killr)^2;
    /* want poacher to start far enough away for ranger to initialize strategy */
  Bool spaceLowerBound(Real xT1, Real yT1) <-> poacherDistanceBound(0, 0, xT1, yT1) | poacherDistanceBound(0, maxY, xT1, yT1) | 
    poacherDistanceBound(maxX, 0, xT1, yT1) | poacherDistanceBound(maxX, maxY, xT1, yT1);
  Real nextTarget(Real pos, Real vel) = pos + vel*T;
  Real spaceToRanger(Real coord, Real max) = capr/(2^(1/2))+coord*(max-capr*2^(1/2))/max;
  Bool targetSeesPoacher(Real xP1, Real yP1, Real xT1, Real yT1) <-> distancesq(xP1, xT1, yP1, yT1) <= preyr^2;
  Bool targetStops(Real dxT1, Real dyT1) <-> dxT1=0 & dyT1=0;

  
  
  /* Hybrid Programs */
  /*HP targetSeesPoacher ::= {?(distancesq(xP1, xT1, yP1, yT1) <= preyr^2);};*/
  /* Predefined Ranger Strategies */
  HP rangerStay ::= {dxR1:=0; dyR1 :=0;};
  HP rangerGo ::= {dxR1:= (spaceToRanger(nextTarget(xT1, dxT1), maxX)-xR1)/T; 
                   dyR1:= (spaceToRanger(nextTarget(yT1, dyT1), maxY)-yR1)/T;};

End.

ProgramVariables
  Real t;
  /* poacher position and velocity */
  Real xP1;
  Real yP1;
  Real dxP1;
  Real dyP1;

  /* ranger position and velocity */
  Real xR1;
  Real yR1;
  Real dxR1;
  Real dyR1;
  
  
  /* target position and velocity */
  Real xT1;
  Real yT1;
  Real dxT1;
  Real dyT1;
End.

Problem
  /* Initial conditions */
  (maxX > 0 & maxY > 0 & inBorder(xR1, yR1) & inBorder(xT1, yT1) & 
   xR1 = spaceToRanger(xT1, maxX) & yR1 = spaceToRanger(yT1, maxY) &
   killr = 0 & capr >= 0 & preyr >0 & maxVp >0 & maxVr >0 & maxVt >0 & T>0 & 
   (rangerDiagonal()-(preyr/maxVp)*maxVr)/maxVr <= spaceDiagonal()/maxVt) 
  ->
  [
    /* Ranger gets initial position (& velocity) */
    /*{xR1 := *; yR1 := *; 
    dxR1 := *; dyR1 := *; ?(dxR1^2 + dyR1^2 <= maxVr^2);}^@;*/
    /* Poacher position */
    xP1 := *; yP1 := *; ?(inBorder(xP1, yP1)); ?(distancesq(xP1, xT1, yP1, yT1) > killr^2);
    {
      /* Target control */
      dxT1 := *; dyT1 := *; ?(vBound(dxT1, dyT1, maxVt)); ?(targetSeesPoacher(xP1, yP1, xT1, yT1) -> targetStops(dxT1, dyT1));
      /* Ranger control */
      rangerGo; ?(vBound(dxR1, dyR1, maxVr));
      /* Poacher Control */
      dxP1 := *; dyP1 := *; ?(vBound(dxP1, dyP1, maxVp));
      /* Dynamics */
      t := 0;
      {{xP1' = dxP1, yP1' = dyP1, xR1' = dxR1, yR1' = dyR1, xT1' = dxT1, yT1' = dyT1 & 
          distancesq(xP1, xR1, yP1, yR1) >= capr^2  &  /* poacher caught -> ranger win */
          distancesq(xP1, xT1, yP1, yT1) >= killr^2 &  /* target caught -> poacher win */
          t <= T & inBorder(xR1, yR1) & inBorder(xP1, yP1) & inBorder(xT1, yT1) & targetSeesPoacher(xP1, yP1, xT1, yT1)
      } ++ 
       {xP1' = dxP1, yP1' = dyP1, xR1' = dxR1, yR1' = dyR1, xT1' = dxT1, yT1' = dyT1 & 
          distancesq(xP1, xR1, yP1, yR1) >= capr^2  &  /* poacher caught -> ranger win */
          distancesq(xP1, xT1, yP1, yT1) >= killr^2 &  /* target caught -> poacher win */
          t <= T & inBorder(xR1, yR1) & inBorder(xP1, yP1) & inBorder(xT1, yT1) & distancesq(xP1, xT1, yP1, yT1) >= preyr^2 
      }}
      ?(distancesq(xP1, xR1, yP1, yR1)> capr^2);
    }*@invariant(distancesq(xP1, xT1, yP1, yT1) > killr^2 & 
       inBorder(xR1, yR1) & inBorder(xP1, yP1) & inBorder(xT1, yT1))
  ]( /* Safety condition */
    (distancesq(xP1, xT1, yP1, yT1) > killr^2 ) & /* target never caught */
    inBorder(xR1, yR1) & inBorder(xP1, yP1) & inBorder(xT1, yT1)
    )
End.

Tactic "starlab-stop: Proof"
unfold;
loop("distancesq(xP1,xT1,yP1,yT1)>killr()^2&inBorder(xR1,yR1)&inBorder(xP1,yP1)&inBorder(xT1,yT1)", 'R=="[{dxT1:=*;dyT1:=*;?vBound(dxT1,dyT1,maxVt());?targetSeesPoacher(xP1,yP1,xT1,yT1)->targetStops(dxT1,dyT1);rangerGo{|^@|};?vBound(dxR1,dyR1,maxVr());dxP1:=*;dyP1:=*;?vBound(dxP1,dyP1,maxVp());t:=0;{{xP1'=dxP1,yP1'=dyP1,xR1'=dxR1,yR1'=dyR1,xT1'=dxT1,yT1'=dyT1&distancesq(xP1,xR1,yP1,yR1)>=capr()^2&distancesq(xP1,xT1,yP1,yT1)>=killr()^2&t<=T()&inBorder(xR1,yR1)&inBorder(xP1,yP1)&inBorder(xT1,yT1)&targetSeesPoacher(xP1,yP1,xT1,yT1)}++{xP1'=dxP1,yP1'=dyP1,xR1'=dxR1,yR1'=dyR1,xT1'=dxT1,yT1'=dyT1&distancesq(xP1,xR1,yP1,yR1)>=capr()^2&distancesq(xP1,xT1,yP1,yT1)>=killr()^2&t<=T()&inBorder(xR1,yR1)&inBorder(xP1,yP1)&inBorder(xT1,yT1)&distancesq(xP1,xT1,yP1,yT1)>=preyr()^2}}?distancesq(xP1,xR1,yP1,yR1)>capr()^2;}*](distancesq(xP1,xT1,yP1,yT1)>killr()^2&inBorder(xR1,yR1)&inBorder(xP1,yP1)&inBorder(xT1,yT1))"); <(
  "Init":
    auto,
  "Post":
    auto,
  "Step":
    expand "rangerGo";
    unfold; <(
      "[{xP1'=dxP1,yP1'=dyP1,xR1'=dxR1,yR1'=dyR1,xT1'=dxT1,yT1'=dyT1&(xR1-xP1)^2+(yR1-yP1)^2>=capr()^2&(xT1-xP1)^2+(yT1-yP1)^2>=killr()^2&0<=T()&(0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&(0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY())&targetSeesPoacher(xP1,yP1,xT1,yT1)}][?(xR1-xP1)^2+(yR1-yP1)^2>capr()^2;]((xT1-xP1)^2+(yT1-yP1)^2>killr()^2&(0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY())":
        boxAnd('R=="[{xP1'=dxP1,yP1'=dyP1,xR1'=dxR1,yR1'=dyR1,xT1'=dxT1,yT1'=dyT1&(xR1-xP1)^2+(yR1-yP1)^2>=capr()^2&(xT1-xP1)^2+(yT1-yP1)^2>=killr()^2&0<=T()&(0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&(0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY())&targetSeesPoacher(xP1,yP1,xT1,yT1)}]#[?(xR1-xP1)^2+(yR1-yP1)^2>capr()^2;]((xT1-xP1)^2+(yT1-yP1)^2>killr()^2&(0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY())#");
        boxAnd('R=="[{xP1'=dxP1,yP1'=dyP1,xR1'=dxR1,yR1'=dyR1,xT1'=dxT1,yT1'=dyT1&(xR1-xP1)^2+(yR1-yP1)^2>=capr()^2&(xT1-xP1)^2+(yT1-yP1)^2>=killr()^2&0<=T()&(0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&(0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY())&targetSeesPoacher(xP1,yP1,xT1,yT1)}]([?(xR1-xP1)^2+(yR1-yP1)^2>capr()^2;](xT1-xP1)^2+(yT1-yP1)^2>killr()^2&[?(xR1-xP1)^2+(yR1-yP1)^2>capr()^2;]((0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY()))");
        unfold; <(
          "[{xP1'=dxP1,yP1'=dyP1,xR1'=dxR1,yR1'=dyR1,xT1'=dxT1,yT1'=dyT1&(xR1-xP1)^2+(yR1-yP1)^2>=capr()^2&(xT1-xP1)^2+(yT1-yP1)^2>=killr()^2&0<=T()&(0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&(0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY())&targetSeesPoacher(xP1,yP1,xT1,yT1)}][?(xR1-xP1)^2+(yR1-yP1)^2>capr()^2;](xT1-xP1)^2+(yT1-yP1)^2>killr()^2":
            dC("(xR1-xT1)^2+(yR1-yT1)^2<=(capr()+distancesq(xP1,xT1,yP1,yT1)^(1/2)/maxVp()*maxVr())^2", 'R=="[{xP1'=dxP1,yP1'=dyP1,xR1'=dxR1,yR1'=dyR1,xT1'=dxT1,yT1'=dyT1&(xR1-xP1)^2+(yR1-yP1)^2>=capr()^2&(xT1-xP1)^2+(yT1-yP1)^2>=killr()^2&0<=T()&(0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&(0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY())&targetSeesPoacher(xP1,yP1,xT1,yT1)}][?(xR1-xP1)^2+(yR1-yP1)^2>capr()^2;](xT1-xP1)^2+(yT1-yP1)^2>killr()^2"); <(
              "Use":
                dW('R=="[{xP1'=dxP1,yP1'=dyP1,xR1'=dxR1,yR1'=dyR1,xT1'=dxT1,yT1'=dyT1&((xR1-xP1)^2+(yR1-yP1)^2>=capr()^2&(xT1-xP1)^2+(yT1-yP1)^2>=killr()^2&0<=T()&(0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&(0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY())&targetSeesPoacher(xP1,yP1,xT1,yT1))&(xR1-xT1)^2+(yR1-yT1)^2<=(capr()+distancesq(xP1,xT1,yP1,yT1)^(1/2)/maxVp()*maxVr())^2}][?(xR1-xP1)^2+(yR1-yP1)^2>capr()^2;](xT1-xP1)^2+(yT1-yP1)^2>killr()^2");
                testb('R=="[?(xR1-xP1)^2+(yR1-yP1)^2>capr()^2;](xT1-xP1)^2+(yT1-yP1)^2>killr()^2");
                implyR('R=="(xR1-xP1)^2+(yR1-yP1)^2>capr()^2->(xT1-xP1)^2+(yT1-yP1)^2>killr()^2");
                unfold;
                expandAll using "(xR1-xP1)^2+(yR1-yP1)^2>capr()^2 :: (xR1-xT1)^2+(yR1-yT1)^2<=(capr()+distancesq(xP1,xT1,yP1,yT1)^(1/2)/maxVp()*maxVr())^2 :: (xR1-xP1)^2+(yR1-yP1)^2>=capr()^2 :: (xT1-xP1)^2+(yT1-yP1)^2>=killr()^2 :: killr()=0 :: capr()>=0 :: preyr()>0 :: maxVp()>0 :: maxVr()>0 :: maxVt()>0 :: yT1<=maxY() :: (maxX()*2^(1/2)-2*capr()-preyr()/maxVp()*maxVr())/maxVr()<=(maxX()^2+maxY()^2)^(1/2)/maxVt() :: (xT1-xP1)^2+(yT1-yP1)^2>killr()^2 :: nil";
                expandAllDefs;
                auto using "(xR1-xP1)^2+(yR1-yP1)^2>capr()^2 :: (xR1-xT1)^2+(yR1-yT1)^2<=(capr()+((xT1-xP1)^2+(yT1-yP1)^2)^(1/2)/maxVp()*maxVr())^2 :: killr()=0 :: capr()>=0 :: preyr()>0 :: maxVp()>0 :: (xT1-xP1)^2+(yT1-yP1)^2>killr()^2 :: nil",
              "Show":
                nil
            ),
          "[{xP1'=dxP1,yP1'=dyP1,xR1'=dxR1,yR1'=dyR1,xT1'=dxT1,yT1'=dyT1&(xR1-xP1)^2+(yR1-yP1)^2>=capr()^2&(xT1-xP1)^2+(yT1-yP1)^2>=killr()^2&0<=T()&(0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&(0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY())&targetSeesPoacher(xP1,yP1,xT1,yT1)}][?(xR1-xP1)^2+(yR1-yP1)^2>capr()^2;]((0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY())":
            GV('R=="[{xP1'=dxP1,yP1'=dyP1,xR1'=dxR1,yR1'=dyR1,xT1'=dxT1,yT1'=dyT1&(xR1-xP1)^2+(yR1-yP1)^2>=capr()^2&(xT1-xP1)^2+(yT1-yP1)^2>=killr()^2&0<=T()&(0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&(0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY())&targetSeesPoacher(xP1,yP1,xT1,yT1)}]#[?(xR1-xP1)^2+(yR1-yP1)^2>capr()^2;]((0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY())#");
            dW('R=="[{xP1'=dxP1,yP1'=dyP1,xR1'=dxR1,yR1'=dyR1,xT1'=dxT1,yT1'=dyT1&(xR1-xP1)^2+(yR1-yP1)^2>=capr()^2&(xT1-xP1)^2+(yT1-yP1)^2>=killr()^2&0<=T()&(0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&(0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY())&targetSeesPoacher(xP1,yP1,xT1,yT1)}]((0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY())");
            auto
        ),
      "[{xP1'=dxP1,yP1'=dyP1,xR1'=dxR1,yR1'=dyR1,xT1'=dxT1,yT1'=dyT1&(xR1-xP1)^2+(yR1-yP1)^2>=capr()^2&(xT1-xP1)^2+(yT1-yP1)^2>=killr()^2&0<=T()&(0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&(0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY())&(xT1-xP1)^2+(yT1-yP1)^2>=preyr()^2}][?(xR1-xP1)^2+(yR1-yP1)^2>capr()^2;]((xT1-xP1)^2+(yT1-yP1)^2>killr()^2&(0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY())":
        GV('R=="[{xP1'=dxP1,yP1'=dyP1,xR1'=dxR1,yR1'=dyR1,xT1'=dxT1,yT1'=dyT1&(xR1-xP1)^2+(yR1-yP1)^2>=capr()^2&(xT1-xP1)^2+(yT1-yP1)^2>=killr()^2&0<=T()&(0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&(0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY())&(xT1-xP1)^2+(yT1-yP1)^2>=preyr()^2}]#[?(xR1-xP1)^2+(yR1-yP1)^2>capr()^2;]((xT1-xP1)^2+(yT1-yP1)^2>killr()^2&(0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY())#");
        dW('R=="[{xP1'=dxP1,yP1'=dyP1,xR1'=dxR1,yR1'=dyR1,xT1'=dxT1,yT1'=dyT1&(xR1-xP1)^2+(yR1-yP1)^2>=capr()^2&(xT1-xP1)^2+(yT1-yP1)^2>=killr()^2&0<=T()&(0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&(0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY())&(xT1-xP1)^2+(yT1-yP1)^2>=preyr()^2}]((xT1-xP1)^2+(yT1-yP1)^2>killr()^2&(0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY())");
        unfold;
        auto using "maxX()>0 :: maxY()>0 :: killr()=0 :: capr()>=0 :: 0<=xR1 :: preyr()>0 :: xR1<=maxX() :: 0<=xP1 :: (xT1-xP1)^2+(yT1-yP1)^2>=preyr()^2 :: 0<=yR1 :: yR1<=maxY() :: xP1<=maxX() :: 0<=xT1 :: 0<=yP1 :: yP1<=maxY() :: xT1<=maxX() :: 0<=yT1 :: yT1<=maxY() :: (xT1-xP1)^2+(yT1-yP1)^2>killr()^2&(0<=xR1&xR1<=maxX()&0<=yR1&yR1<=maxY())&(0<=xP1&xP1<=maxX()&0<=yP1&yP1<=maxY())&0<=xT1&xT1<=maxX()&0<=yT1&yT1<=maxY() :: nil"
    )
)
End.

End.